<?php
/** @var \Contestio\Connect\ViewModel\RouteChecker $viewModel */
$viewModel = $block->getData('view_model');

if ($viewModel->isContestioRoute() === false) {
  // If not contestio route, do not load React app
  return;
}

/** @var \Contestio\Connect\Block\React $block */
$iframeUrl = $block->getIframeUrl();
$queryParams = $block->getQueryParams();

?>

<style>
  /* Enlarge the container */
  main#maincontent  {
    max-width: 100% !important;
    padding: 0 !important;
    margin: 0 !important;
  }

  /* Make the container flex */
  .page-main > .columns,
  .page-main > .columns > .column.main {
    display: flex !important;
    width: 100% !important;
    max-width: 100% !important;
    padding: 0 !important;
    margin: 0 !important;
  }
</style>

<div class="contestio-container">
  <div class="contestio-loading" id="contestio-loading"></div>

  <iframe
  id="contestio-iframe"
  src="<?php echo $iframeUrl; ?><?php echo $queryParams; ?>"
  width="100%"
  height="100%"
  frameborder="0"
  allowfullscreen
  class="contestio-iframe contestio-hidden">
</iframe>
</div>

<script>
if (typeof window.initContestio === 'undefined') {
  window.initContestio = () => {
    console.log('Contestio: Initializing');

    const showIframe = () => {
      const loading = document.getElementById('contestio-loading');
      const iframe = document.getElementById('contestio-iframe');

      console.log('Contestio: Attempting to show iframe');
      
      if (!loading || !iframe) {
        console.error('Contestio: Elements not found', { loading, iframe });
        return;
      }

      loading.style.display = 'none';
      iframe.classList.remove('contestio-hidden');
      console.log('Contestio: Iframe displayed, loader hidden');
    }
    
    // Security timeout
    const timeoutDuration = 2000;
    const timeoutId = setTimeout(() => {
      console.log('Contestio: Timeout reached, displaying iframe');
      showIframe();
    }, timeoutDuration);

    console.log('Contestio: Fetching customer data');
    fetch('/contestio/ajax/customerData')
      .then(response => {
        console.log('Contestio: Customer data response received', response.status);
        return response.json();
      })
      .then(data => {
        console.log('Contestio: Customer data processed', data);
        const iframe = document.getElementById('contestio-iframe');

        if (data.customer_id && data.customer_email) {
          console.log('Contestio: Customer is logged in, updating iframe src');
          const currentSrc = new URL(iframe.src);
          currentSrc.searchParams.append('customer_id', data.customer_id);
          currentSrc.searchParams.append('customer_email', data.customer_email);
          
          // Timeout spécifique pour les utilisateurs connectés
          const loginTimeoutId = setTimeout(() => {
            console.log('Contestio: Login timeout reached, forcing display');
            clearTimeout(timeoutId);
            showIframe();
          }, 3000); // 3 secondes
          
          iframe.onload = function() {
            console.log('Contestio: Iframe content loaded');
            clearTimeout(timeoutId);
            clearTimeout(loginTimeoutId);
            showIframe();
          };
          
          iframe.src = currentSrc.toString();
        } else {
          console.log('Contestio: No customer data, showing iframe directly');
          clearTimeout(timeoutId);
          showIframe();
        }
      })
      .catch(error => {
        console.error('Contestio error:', error);
        clearTimeout(timeoutId);
        showIframe();
      }).finally(() => {
        console.log('Contestio: Fetching customer data finished');
      });
  }
}

// Exécuter immédiatement si le DOM est déjà chargé
if (document.readyState === 'loading') {
  document.addEventListener('DOMContentLoaded', window.initContestio);
} else {
  window.initContestio();
}
</script>
