<?php
/** @var \Contestio\Connect\ViewModel\RouteChecker $viewModel */
$viewModel = $block->getData('view_model');

if ($viewModel->isContestioRoute() === false) {
  // If not contestio route, do not load React app
  return;
}

/** @var \Contestio\Connect\Block\React $block */
$iframeUrl = $block->getIframeUrl();
$queryParams = $block->getQueryParams();

try {
  $metaData = $block->getMetaTags();
} catch (\Exception $e) {
  $metaData = [];
}

if (!is_array($metaData)) {
  $metaData = [];
}

$defaultTitle = __('Contestio customer community');
$defaultDescription = __('Discover contests, surveys and community news powered by Contestio.');

$iframeTitle = isset($metaData['title']) && !empty($metaData['title'])
  ? $block->escapeHtml($metaData['title'])
  : $block->escapeHtml($defaultTitle);

$iframeDescription = isset($metaData['description']) && !empty($metaData['description'])
  ? $block->escapeHtml($metaData['description'])
  : $block->escapeHtml($defaultDescription);

$iframeFullUrl = $block->escapeUrl($iframeUrl . $queryParams);
?>

<style>
  /* Enlarge the container */
  main#maincontent {
    padding: 0 !important;
    max-width: 1400px !important;
    margin: 0 auto !important;
  }

  /* Make the container flex */
  .page-main>.columns,
  .page-main>.columns>.column.main {
    display: flex !important;
    width: 100% !important;
    max-width: 100% !important;
    padding: 0 !important;
    margin: 0 !important;
  }

  .contestio-noscript {
    margin-top: 1.5rem;
    padding: 1rem;
    background: #F9FAFB;
    border: 1px solid #E5E7EB;
    border-radius: 8px;
  }

  .contestio-noscript a {
    color: #1D4ED8;
    text-decoration: underline;
  }
</style>

<div class="contestio-seo-intro" hidden>
  <h2><?php /* translators: default Contestio iframe title */ echo $iframeTitle; ?></h2>
  <p><?php /* translators: default Contestio iframe description */ echo $iframeDescription; ?></p>
</div>

<?php if (!empty($metaData['highlights']) && is_array($metaData['highlights'])): ?>
  <div class="contestio-seo-highlights" hidden>
    <ul>
      <?php foreach ($metaData['highlights'] as $highlight): ?>
        <li><?php echo $block->escapeHtml($highlight); ?></li>
      <?php endforeach; ?>
    </ul>
  </div>
<?php endif; ?>

<?php if (!empty($metaData['links']) && is_array($metaData['links'])): ?>
  <div class="contestio-seo-links" hidden>
    <ul>
      <?php foreach ($metaData['links'] as $link): ?>
        <?php
          $href = isset($link['href']) ? $block->escapeUrl($link['href']) : '';
          if (!$href) { continue; }
          $linkText = isset($link['text']) && $link['text'] ? $block->escapeHtml($link['text']) : $iframeTitle;
        ?>
        <li><a href="<?php echo $href; ?>"><?php echo $linkText; ?></a></li>
      <?php endforeach; ?>
    </ul>
  </div>
<?php endif; ?>

<div class="contestio-container">
  <div class="contestio-loading" id="contestio-loading"></div>

  <!-- Pas de src initial sur l'iframe -->
  <iframe 
    id="contestio-iframe" 
    data-contestio-base-url="<?php echo $iframeUrl; ?>"
    data-url="<?php echo $iframeUrl; ?><?php echo $queryParams; ?>"
    width="100%" 
    height="100%"
    loading="lazy"
    frameborder="0" 
    allowfullscreen 
    sandbox="allow-scripts allow-same-origin allow-forms allow-popups allow-popups-to-escape-sandbox"
    title="<?php echo $iframeTitle; ?>"
    aria-label="<?php echo $iframeTitle; ?>"
    class="contestio-iframe contestio-hidden">
  </iframe>

</div>

<noscript>
  <div class="contestio-noscript">
    <p>
      <?php echo $block->escapeHtml(__('Activate JavaScript to interact with the Contestio community experience.')); ?>
      <a href="<?php echo $iframeFullUrl; ?>" rel="nofollow">
        <?php echo $block->escapeHtml(__('Access Contestio content')); ?>
      </a>
    </p>
  </div>
</noscript>

<script>
// ContestioGlobal pour contestio.js
if (typeof window.contestioGlobal === 'undefined') {
  window.contestioGlobal = {
    iframeReady: false,
    customerDataLoaded: false,
    listenersSetup: false,
    callbacks: []
  };
}

(function() {
  const startTime = Date.now();
  const log = (msg, data = null) => {
    const timestamp = Date.now() - startTime;
    if (data) {
      console.log(`🍎 [${timestamp}ms] ${msg}`, data);
    } else {
      console.log(`🍎 [${timestamp}ms] ${msg}`);
    }
  };
  
  log('=== CONTESTIO INIT START ===');
  log('User Agent:', navigator.userAgent);
  // log('Is Safari iOS:', /Safari/.test(navigator.userAgent) && /iPhone|iPad/.test(navigator.userAgent));
  
  // Variable pour éviter le double chargement
  let iframeLoaded = false;
  
  function init() {
    log('Init function called');
    log('contestioGlobal state:', window.contestioGlobal);
    
    const loading = document.getElementById('contestio-loading');
    const iframe = document.getElementById('contestio-iframe');
    
    if (!iframe || !loading) {
      log('Elements not found', { iframe: !!iframe, loading: !!loading });
      return;
    }

    // Vérifier si l'iframe a déjà un src
    if (iframe.src && iframe.src !== 'about:blank') {
      log('Iframe already has src, aborting to prevent double load');
      return;
    }

    // Récupérer l'URL de base depuis data-url
    const baseUrl = iframe.getAttribute('data-url');
    iframe.dataset.contestioBaseUrl = baseUrl;
    
    const fetchStartTime = Date.now();    
    // Récupérer les données utilisateur
    fetch('/contestio/ajax/customerData', {
      method: 'GET',
      credentials: 'include',
      headers: {
        'Accept': 'application/json',
      }
    })
      .then(response => {
        if (!response.ok) {
          throw new Error(`HTTP ${response.status}`);
        }
        return response.json();
      })
      .then(data => {
        // Marquer les données comme chargées
        window.contestioGlobal.customerDataLoaded = true;
        
        // Vérifier encore une fois
        if (iframeLoaded || (iframe.src && iframe.src !== 'about:blank')) {
          log('Iframe already loaded, aborting');
          return;
        }
        
        // Construire l'URL finale avec tous les paramètres
        let finalUrl = baseUrl;
        if (data.customer_id && data.customer_email) {
          const separator = baseUrl.includes('?') ? '&' : '?';
          finalUrl = `${baseUrl}${separator}customer_id=${encodeURIComponent(data.customer_id)}&customer_email=${encodeURIComponent(data.customer_email)}`;
        }
        
        // Charger l'iframe UNE SEULE FOIS
        iframeLoaded = true;
        
        // Event listener AVANT de définir src
        iframe.onload = function() {
          log('Iframe onload fired');
          
          // Montrer l'iframe
          loading.style.display = 'none';
          iframe.classList.remove('contestio-hidden');
          
          // Marquer l'iframe comme prête
          window.contestioGlobal.iframeReady = true;
          
          // Attendre un peu puis exécuter les callbacks
          // Plus long délai sur Safari iOS
          const isSafariIOS = /Safari/.test(navigator.userAgent) && /iPhone|iPad/.test(navigator.userAgent);
          const delay = isSafariIOS ? 2000 : 500;
          
          setTimeout(() => {
            log('Executing contestioGlobal callbacks...', {
              callbackCount: window.contestioGlobal.callbacks.length
            });
            
            window.contestioGlobal.callbacks.forEach(callback => {
              try {
                callback();
              } catch (error) {
                log('Callback error:', error);
              }
            });
            window.contestioGlobal.callbacks = [];
          }, delay);
        };
        
        iframe.onerror = function(e) {
          log('Iframe onerror fired', e);
        };
        
        // Définition du src
        iframe.src = finalUrl;
        
      })
      .catch(error => {
        log('Error in fetch chain:', {
          message: error.message
        });
        
        // Marquer comme chargé même en cas d'erreur
        window.contestioGlobal.customerDataLoaded = true;
        
        // En cas d'erreur, charger quand même l'iframe
        if (!iframeLoaded && (!iframe.src || iframe.src === 'about:blank')) {
          log('Loading iframe with base URL due to error');
          iframeLoaded = true;
          iframe.dataset.contestioBaseUrl = baseUrl;
          iframe.src = baseUrl;
          iframe.onload = function() {
            loading.style.display = 'none';
            iframe.classList.remove('contestio-hidden');
            window.contestioGlobal.iframeReady = true;
            
            // Exécuter les callbacks
            setTimeout(() => {
              window.contestioGlobal.callbacks.forEach(callback => {
                try { callback(); } catch (e) { log('Callback error:', e); }
              });
              window.contestioGlobal.callbacks = [];
            }, 500);
          };
        }
      });
  }

  // Lancer l'init quand le DOM est prêt
  if (document.readyState === 'loading') {
    log('Waiting for DOMContentLoaded...');
    document.addEventListener('DOMContentLoaded', () => {
      log('DOMContentLoaded fired');
      init();
    });
  } else {
    log('DOM already ready, calling init immediately');
    init();
  }
  
})();
</script>
